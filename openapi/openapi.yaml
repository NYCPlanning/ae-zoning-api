openapi: 3.0.0
info:
  title: Zoning API
  description: |-
    An API for serving data related to the zoning of New York City.
  version: 0.1.0
servers:
  - url: https://zoning.planningdigital.com/api
tags:
  - name: Boroughs
  - name: Land Uses
  - name: Tax Lots
  - name: Zoning Districts
  - name: GeoJSON
paths:
  /boroughs:
    get: 
      summary: List boroughs
      operationId: getBoroughs
      tags:
      - Boroughs
      responses:
        '200':
          description: An array of borough objects.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/Borough'
  /land-uses:
    get: 
      summary: List land uses
      operationId: getLandUses
      tags:
      - Land Uses
      responses:
        '200':
          description: An array of land use objects.
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/LandUse'
  /tax-lots/{bbl}:
    get: 
      summary: Non-spatial details for a specific tax lot
      operationId: getTaxLotByBbl
      tags:
      - Tax Lots
      parameters:
        - name: bbl
          in: path
          required: true  
          schema:
            type: string
            minLength: 10
            maxLength: 10
      responses:
        '200':
          description: A tax lot object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxLot'
  /tax-lots/{bbl}/geojson:
    get: 
      summary: GeoJSON for a specific tax lot
      operationId: getTaxLotGeoJsonByBbl
      tags:
      - Tax Lots
      - GeoJSON
      parameters:
        - name: bbl
          in: path
          required: true  
          schema:
            type: string
            minLength: 10
            maxLength: 10
      responses:
        '200':
          description: A tax lot geojson object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxLotGeoJson'
  /tax-lots/{bbl}/zoning-districts:
    get: 
      summary: Non-spatial details for zoning districts that spatially intersect a tax lot.
      operationId: getZoningDistrictsByTaxLotBbl
      tags:
      - Tax Lots
      - Zoning Districts
      parameters:
        - name: bbl
          in: path
          required: true  
          schema:
            type: string
            minLength: 10
            maxLength: 10
      responses:
        '200':
          description: An array of zoning district objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZoningDistrict'
  /tax-lots/{bbl}/zoning-districts/classes:
    get:
      summary: Class schemas for all zoning districts that spatially intersect the tax lot
      operationId: getZoningDistrictClassesByTaxLotBbl
      tags:
        - Tax Lots
        - Zoning Districts
      parameters:
        - name: bbl
          in: path
          required: true
          schema:
            type: string
            minLength: 10
            maxLength: 10
      responses:
        '200':
          description: An array of zoning district class schemas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZoningDistrictClass'
  /zoning-districts/{id}:
    get:
      summary: Non-spatial details for a specific zoning district
      operationId: getZoningDistrictById
      tags:
      - Zoning Districts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A zoning district object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoningDistrict'
  /zoning-districts/{uuid}/classes:
    get:
      summary: Class schemas for the specified zoning district
      operationId: getZoningDistrictClassesByUuid
      tags:
      - Zoning Districts
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An array of class schemas for the zoning district
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZoningDistrictClass'
  /zoning-district-classes:
    get:
      summary: Class schemas for all zoning districts
      operationId: getAllZoningDistrictClasses
      tags:
      - Zoning Districts
      responses:
        '200': 
          description: An array of all zoning district class schemas
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#/components/schemas/ZoningDistrictClass"
  /zoning-district-classes/category-colors:
    get:
      summary: List of color and class category
      operationId: getZoningDistrictClassesCategoryColors
      tags:
      - Zoning Districts
    responses:
      '200':
          description: An array of all zoning district category colors.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: string
                  example:
                    Manufacturing: '#f3b3ff'
  /zoning-district-classes/{id}:
    get:
      summary: All class schemas for the specified class
      operationId: getZoningDistrictClassesById
      tags:
      - Zoning Districts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An array of zoning district class schemas for a zoning district
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ZoningDistrictClass"
components:
  schemas:
    Borough:
      type: object
      properties:
        id:
          type: string
          description: A single character numeric string containing the common number used to refer to the borough. Possible values are 1-5.
          pattern: \b[1-9]\b
          example: 1
        title:
          type: string
          description: The full name of the borough.
          example: Manhattan
        abbr:
          type: string
          description: The two character abbreviation for the borough.
          minLength: 2
          maxLength: 2
          example: MN
      required:
        - id
        - title
        - abbr
    LandUse:
      type: object
      properties:
        id:
          type: string
          description: The two character code to represent the land use. Possible values are 01-11.
          minLength: 2
          maxLength: 2
          example: '05'
        description:
          type: string
          description: The description of the land use.
          example: Commercial and Office Buildings
        color:
          type: string
          description: Hex-style color code to represent the land use.
          pattern: '^#([A-Fa-f0-9]{6})$'
          example: '#fc2929'
      required:
        - id
        - description
        - color
    TaxLot:
      type: object
      properties:
        bbl:
          type: string
          description: The ten character code compromised of a one character borough, five character block, and four character lot codes.
          minLength: 10
          maxLength: 10
          example: '1000477501'
        borough:
          $ref: '#/components/schemas/Borough'
        block:
          type: string
          description: The block code, without its padding zeros.
          minLength: 1
          maxLength: 5
          example: 47
        lot:
          type: string
          description: The lot code, without its padding zeros.
          minLength: 1
          maxLength: 4
          example: 7501
        address:
          type: string
          description: The street address.
          example: 120 BROADWAY
        landUse:
          $ref: '#/components/schemas/LandUse'
      required:
        - bbl
        - borough
        - block
        - lot
        - address
        - landUse
    TaxLotGeoJson:
      type: object
      properties:
        id:
          type: string
          description: The bbl of the tax lot.
          minLength: 10
          maxLength: 10
          example: '1000477501'
        type:
          type: string
          enum:
            - Feature
        geometry:
          $ref: '#/components/schemas/MultiPolygon'
        properties:
          $ref: '#/components/schemas/TaxLot'
    ZoningDistrict:
      type: object
      properties:
        id:
          type: string
          description: An automatically generated uuid.
          format: uuid
          example: d1c09f3a-553b-4574-811e-abd59d19e01b
        label:
          type: string
          description: The zoning codes that apply to the district. Multiple codes are concatenated with a slash.
          example: M1-5/R7-3
      required:
        - id
        - label
    ZoningDistrictClass:
      type: object
      properties:
        id:
          type: string
          description: The code associated with the Zoning class.
          pattern:  '^((C[1-8])|(M[1-3])|(R([1-9]|10)))$'
          example: M1
        category:
          type: string
          enum:
            - "Residential"
            - "Commercial"
            - "Manufacturing"
          description: The type of zoning district.
        description:
          type: string
          description: Zoning class descriptions.
        color:
          type: string
          description: Zoning classes from layer groups.
          pattern: '^#([A-Fa-f0-9]{6})$'
          example: '#f3b3ff'
    Position:
      type: array
      description: The fundamental spatial construct
      minItems: 2
      maxItems: 3
      items:
        type: number
      example: [-74.010835, 40.708442]
    MultiPolygon:
      type: object
      description: A geojson implementation of a MultiPolygon Simple Feature
      properties:
        type: 
          type: string
          enum:
            - "MultiPolygon"
        coordinates:
          type: array
          description: Array of polygon coordinate arrays.
          items:
            type: array
            items:
              type: array
              items:
                $ref: '#/components/schemas/Position'
