/*
 * Zoning API
 * An API for serving data related to the zoning of New York City.
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * Generator version: 7.5.0-SNAPSHOT
 */

import http from "k6/http";
import { group, check } from "k6";

const BASE_URL = "http://api:3000/api";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
// const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function () {
  group("/land-uses", () => {
    // Request No. 1: findLandUses
    {
      const url = BASE_URL + `/land-uses`;
      const request = http.get(url);

      check(request, {
        "An object containing all land uses.": (r) => r.status === 200,
      });
    }
  });

  group("/tax-lots/{bbl}/zoning-districts/classes", () => {
    const bbl = "1000477501"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: findZoningDistrictClassesByTaxLotBbl
    {
      const url = BASE_URL + `/tax-lots/${bbl}/zoning-districts/classes`;
      const request = http.get(url);

      check(request, {
        "An object containing zoning district class schemas.": (r) =>
          r.status === 200,
      });
    }
  });

  group("/zoning-districts/{id}/classes", () => {
    const id = "d1c09f3a-553b-4574-811e-abd59d19e01b"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: findZoningDistrictClassesByZoningDistrictId
    {
      const url = BASE_URL + `/zoning-districts/${id}/classes`;
      const request = http.get(url);

      check(request, {
        "An object of class schemas for the zoning district.": (r) =>
          r.status === 200,
      });
    }
  });

  group("/zoning-district-classes/category-colors", () => {
    // Request No. 1: findZoningDistrictClassCategoryColors
    {
      const url = BASE_URL + `/zoning-district-classes/category-colors`;
      const request = http.get(url);

      check(request, {
        "An object containing all zoning district category colors.": (r) =>
          r.status === 200,
      });
    }
  });

  group("/zoning-district-classes/{id}", () => {
    const id = "d1c09f3a-553b-4574-811e-abd59d19e01b"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: findZoningDistrictClassByZoningDistrictClassId
    {
      const url = BASE_URL + `/zoning-district-classes/${id}`;
      const request = http.get(url);

      check(request, {
        "A class schema for a zoning district": (r) => r.status === 200,
      });
    }
  });

  group("/tax-lots/{bbl}/zoning-districts", () => {
    const bbl = "1000477501"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: findZoningDistrictsByTaxLotBbl
    {
      const url = BASE_URL + `/tax-lots/${bbl}/zoning-districts`;
      const request = http.get(url);

      check(request, {
        "An object containing zoning districts.": (r) => r.status === 200,
      });
    }
  });

  group("/boroughs", () => {
    // Request No. 1: findBoroughs
    {
      const url = BASE_URL + `/boroughs`;
      const request = http.get(url);

      check(request, {
        "An object containing all boroughs.": (r) => r.status === 200,
      });
    }
  });

  group("/tax-lots", () => {
    const offset = "0"; // specify value as there is no example value for this parameter in OpenAPI spec
    const limit = "100"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: findTaxLots
    {
      const url = BASE_URL + `/tax-lots?limit=${limit}&offset=${offset}`;
      const request = http.get(url);

      check(request, {
        "An object containing a list of tax lots and pagination metadata": (
          r,
        ) => r.status === 200,
      });
    }
  });

  group("/zoning-districts/{id}", () => {
    const id = "d1c09f3a-553b-4574-811e-abd59d19e01b"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: findZoningDistrictByZoningDistrictId
    {
      const url = BASE_URL + `/zoning-districts/${id}`;
      const request = http.get(url);

      check(request, {
        "A zoning district object": (r) => r.status === 200,
      });
    }
  });

  group("/zoning-district-classes", () => {
    // Request No. 1: findZoningDistrictClasses
    {
      const url = BASE_URL + `/zoning-district-classes`;
      const request = http.get(url);

      check(request, {
        "An object containing all zoning district class schemas.": (r) =>
          r.status === 200,
      });
    }
  });

  group("/tax-lots/{bbl}", () => {
    const bbl = "1000477501"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: findTaxLotByBbl
    {
      const url = BASE_URL + `/tax-lots/${bbl}`;
      const request = http.get(url);

      check(request, {
        "A tax lot object": (r) => r.status === 200,
      });
    }
  });

  group("/tax-lots/{bbl}/geojson", () => {
    const bbl = "1000477501"; // specify value as there is no example value for this parameter in OpenAPI spec

    // Request No. 1: findTaxLotGeoJsonByBbl
    {
      const url = BASE_URL + `/tax-lots/${bbl}/geojson`;
      const request = http.get(url);

      check(request, {
        "A tax lot geojson object": (r) => r.status === 200,
      });
    }
  });
}
